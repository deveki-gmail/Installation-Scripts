***************************************** Docker Images Building ******************************************************
Connected, host fingerprint: ssh-rsa 2048 F1:C8:77:02:0D:79:8C:22:46:CA:ED:EC:AE:DC:F1:EF:D2:9F:F7:0F:00:8D:6D:77:66:67:1D:22:8A:D6:45:C0
Welcome to Ubuntu 18.04 LTS (GNU/Linux 4.15.0-1009-gcp x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

 System information disabled due to load higher than 1.0

 * Meltdown, Spectre and Ubuntu: What are the attack vectors,
   how the fixes work, and everything else you need to know
   - https://ubu.one/u2Know

  Get cloud support with Ubuntu Advantage Cloud Guest:
    http://www.ubuntu.com/business/services/cloud

54 packages can be updated.
0 updates are security updates.


Last login: Thu Jun 28 12:53:56 2018 from 74.125.41.161
devekinandan@ubuntu-docker:~$ sudo docker-machine --version
sudo: docker-machine: command not found
devekinandan@ubuntu-docker:~$ docker -version
\unknown shorthand flag: 'e' in -ersion
See 'docker --help'.

Usage:  docker COMMAND

A self-sufficient runtime for containers

Options:
      --config string      Location of client config files (default "/home/devekinandan/.docker")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket(s) to connect to
  -l, --log-level string   Set the logging level ("debug"|"info"|"warn"|"error"|"fatal") (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default "/home/devekinandan/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default "/home/devekinandan/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default "/home/devekinandan/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Management Commands:
  checkpoint  Manage checkpoints
  config      Manage Docker configs
  container   Manage containers
  image       Manage images
  network     Manage networks
  node        Manage Swarm nodes
  plugin      Manage plugins
  secret      Manage Docker secrets
  service     Manage services
  stack       Manage Docker stacks
  swarm       Manage Swarm
  system      Manage Docker
  trust       Manage trust on Docker images (experimental)
  volume      Manage volumes

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  build       Build an image from a Dockerfile
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  deploy      Deploy a new stack or update an existing stack
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  exec        Run a command in a running container
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  images      List images
  import      Import the contents from a tarball to create a filesystem image
  info        Display system-wide information
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  login       Log in to a Docker registry
  logout      Log out from a Docker registry
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  ps          List containers
  pull        Pull an image or a repository from a registry
  push        Push an image or a repository to a registry
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  run         Run a command in a new container
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  search      Search the Docker Hub for images
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  version     Show the Docker version information
  wait        Block until one or more containers stop, then print their exit codes

Run 'docker COMMAND --help' for more information on a command.

devekinandan@ubuntu-docker:~$ docker -version
unknown shorthand flag: 'e' in -ersion
See 'docker --help'.

Usage:  docker COMMAND

A self-sufficient runtime for containers

Options:
      --config string      Location of client config files (default "/home/devekinandan/.docker")
  load        Load an image from a tar archive or STDIN
  login       Log in to a Docker registry
  logout      Log out from a Docker registry
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  ps          List containers
  pull        Pull an image or a repository from a registry
  push        Push an image or a repository to a registry
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  run         Run a command in a new container
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  search      Search the Docker Hub for images
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  version     Show the Docker version information
  wait        Block until one or more containers stop, then print their exit codes

Run 'docker COMMAND --help' for more information on a command.

devekinandan@ubuntu-docker:~$ docker --version
Docker version 17.12.1-ce, build 7390fc6
devekinandan@ubuntu-docker:~$ docker-machine --version
docker-machine: command not found
devekinandan@ubuntu-docker:~$ sudo docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
devekinandan@ubuntu-docker:~$ sudo docker images ls
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
devekinandan@ubuntu-docker:~$ ls
testdocker
devekinandan@ubuntu-docker:~$ cd testdocker/
devekinandan@ubuntu-docker:~/testdocker$ ls
Dockerfile  springdockertest
devekinandan@ubuntu-docker:~/testdocker$ sudo vi Dockerfile 
devekinandan@ubuntu-docker:~/testdocker$ sudo cat Dockerfile 
FROM alpine
CMD ls
devekinandan@ubuntu-docker:~/testdocker$ cd springdockertest/
devekinandan@ubuntu-docker:~/testdocker/springdockertest$ ls
Dockerfile  mvnw  mvnw.cmd  pom.xml  src  target1
devekinandan@ubuntu-docker:~/testdocker/springdockertest$ cat Dockerfile 
FROM openjdk:8
ADD target1/springdockertest.jar springdockertest.jar
EXPOSE 8085
ENTRYPOINT ["java","-jar","springdockertest.jar"]
devekinandan@ubuntu-docker:~/testdocker/springdockertest$ ls
Dockerfile  mvnw  mvnw.cmd  pom.xml  src  target1
devekinandan@ubuntu-docker:~/testdocker/springdockertest$ cat pom.xml 
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
        <modelVersion>4.0.0</modelVersion>

        <groupId>com.example</groupId>
        <artifactId>springdockertest</artifactId>
        <version>0.0.1-SNAPSHOT</version>
        <packaging>jar</packaging>

        <name>springdockertest</name>
        <description>Demo project for Spring Boot</description>

        <parent>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-parent</artifactId>
                <version>2.0.2.RELEASE</version>
                <relativePath/> <!-- lookup parent from repository -->
        </parent>

        <properties>
                <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
                <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
                <java.version>1.8</java.version>
        </properties>

        <dependencies>
                <dependency>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-starter-web</artifactId>
                </dependency>

                <dependency>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-starter-test</artifactId>
                        <scope>test</scope>
                </dependency>
        </dependencies>

        <build>
                <plugins>
                        <plugin>
                                <groupId>org.springframework.boot</groupId>
                                <artifactId>spring-boot-maven-plugin</artifactId>
                        </plugin>
                </plugins>
                <finalName>springdockertest</finalName>
        </build>


</project>
devekinandan@ubuntu-docker:~/testdocker/springdockertest$ sudo docker build -t springdockertest .
Sending build context to Docker daemon  30.84MB
Step 1/4 : FROM openjdk:8
8: Pulling from library/openjdk
0bd44ff9c2cf: Pull complete 
047670ddbd2a: Pull complete 
ea7d5dc89438: Pull complete 
ae7ad5906a75: Pull complete 
a76e47a4ab02: Pull complete 
91b21dd5ce82: Pull complete 
26054c6ae22c: Pull complete 
57152e61ecf5: Pull complete 
35afc4439052: Pull complete 
Digest: sha256:0cd937da5aaa51b0e1790e7f5e25ffab61d54ab16c6dabda8ee0b11a901b712a
Status: Downloaded newer image for openjdk:8
 ---> fe9f7b1e4fa0
Step 2/4 : ADD target1/springdockertest.jar springdockertest.jar
 ---> e843397dc317
Step 3/4 : EXPOSE 8085
 ---> Running in 0fa908d9a02a
Removing intermediate container 0fa908d9a02a
 ---> fa6b790bb4a1
Step 4/4 : ENTRYPOINT ["java","-jar","springdockertest.jar"]
 ---> Running in 9cba0826be19
Removing intermediate container 9cba0826be19
 ---> 416c120ff6a1
Successfully built 416c120ff6a1
Successfully tagged springdockertest:latest


***************************************** Docker Images Running ******************************************************
devekinandan@ubuntu-docker:~/testdocker/springdockertest$ sudo docker images
REPOSITORY          TAG                 IMAGE ID            CREATED              SIZE
springdockertest    latest              416c120ff6a1        About a minute ago   640MB
openjdk             8                   fe9f7b1e4fa0        2 days ago           624MB
devekinandan@ubuntu-docker:~/testdocker/springdockertest$ sudo docker run -p 8085:8085 springdockertest

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::        (v2.0.2.RELEASE)

2018-07-05 12:48:12.271  INFO 1 --- [           main] c.e.s.SpringdockertestApplication        : Starting SpringdockertestApplication v0.0.1-SNAPSHOT on 1205c8459557 with PID 1 (/springdockertest.jar started by root in /)
2018-07-05 12:48:12.282  INFO 1 --- [           main] c.e.s.SpringdockertestApplication        : No active profile set, falling back to default profiles: default
2018-07-05 12:48:12.667  INFO 1 --- [           main] ConfigServletWebServerApplicationContext : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6842775d: startup date [Thu Jul 05 12:48:12 UTC 2018]; root of context hierarchy
2018-07-05 12:48:16.651  INFO 1 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8085 (http)
2018-07-05 12:48:16.739  INFO 1 --- [           main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2018-07-05 12:48:16.741  INFO 1 --- [           main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 12:48:16.775  INFO 1 --- [ost-startStop-1] o.a.catalina.core.AprLifecycleListener   : The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib]
2018-07-05 12:48:16.988  INFO 1 --- [ost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2018-07-05 12:48:16.989  INFO 1 --- [ost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 4328 ms
2018-07-05 12:48:17.286  INFO 1 --- [ost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Servlet dispatcherServlet mapped to [/]
2018-07-05 12:48:17.295  INFO 1 --- [ost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 12:48:17.303  INFO 1 --- [ost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 12:48:17.304  INFO 1 --- [ost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 12:48:17.304  INFO 1 --- [ost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 12:48:17.727  INFO 1 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 12:48:18.303  INFO 1 --- [           main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6842775d: startup date [Thu Jul 05 12:48:12 UTC 2018]; root of context hierarchy
2018-07-05 12:48:18.474  INFO 1 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/hi],methods=[GET]}" onto public java.lang.String com.example.springdockertest.Hello.hi()
2018-07-05 12:48:18.485  INFO 1 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 12:48:18.491  INFO 1 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 12:48:18.550  INFO 1 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 12:48:18.551  INFO 1 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 12:48:18.888  INFO 1 --- [           main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-05 12:48:18.986  INFO 1 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8085 (http) with context path ''
2018-07-05 12:48:18.991  INFO 1 --- [           main] c.e.s.SpringdockertestApplication        : Started SpringdockertestApplication in 7.884 seconds (JVM running for 10.704)
2018-07-05 12:51:24.399  INFO 1 --- [nio-8085-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 12:51:24.400  INFO 1 --- [nio-8085-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 12:51:24.425  INFO 1 --- [nio-8085-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 25 ms


****************************************************************** Consuming Webservices ******************************************************************
devekinandan@ubuntu-docker:~/testdocker/springdockertest$ curl http://10.142.0.7:8085/hi
Hi.....Deveki nandan mishradevekinandan@ubuntu-docker:~/testdocker/springdockertest$ 